name: Check for Hugo releases, upgrade

on:
  schedule:
  - cron: '0 0 * * *'   # run 00:00 UTC
  workflow_dispatch:

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Get latest Hugo version
        id: hugo_version
        run: |
          HUGO_VERSION=$(curl --silent https://api.github.com/repos/gohugoio/hugo/releases/latest | jq -r .tag_name | sed 's/v//')
          echo "::set-output name=VERSION::$HUGO_VERSION"
      - name: Get Dockerfile Hugo version
        id: local_version
        run: |
          LOCAL_VERSION=$(sed '3q;d' Dockerfile | cut -c18-23)
          echo "::set-output name=VERSION::$LOCAL_VERSION"
      - name: Compare versions
        id: update
        run: |
          echo "Local Hugo version is v${{ steps.local_version.outputs.VERSION }}."
          echo "Latest Hugo version is v${{ steps.hugo_version.outputs.VERSION }}."

          if [ "${{ steps.hugo_version.outputs.VERSION }}" != "${{ steps.local_version.outputs.VERSION }}" ]
          then
            echo "ðŸš¨ Needs updating!"
            exit 1
          else
            echo "âœ… All good for now."
            exit 0
          fi
      - name: Upgrade Hugo
        if: ${{ steps.hugo_version.outputs.VERSION }} != ${{ steps.local_version.outputs.VERSION }}
        run: |
          sed -i 's/HUGO_VERSIONN=${{ steps.local_version.outputs.VERSION }}/HUGO_VERSION=${{ steps.hugo_version.outputs.VERSION }}/' Dockerfile
          # https://linuxize.com/post/how-to-use-sed-to-find-and-replace-string-in-files/
      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Upgrade Hugo to v${{ steps.hugo_version.outputs.VERSION }}
